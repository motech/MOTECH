<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="org.motechproject.mdsgenerated"/>

    <mvc:annotation-driven/>

    <bean id="allEntities" class="org.motechproject.mds.repository.AllEntities" />

    <bean id="historyService" class="org.motechproject.mds.service.impl.history.HistoryServiceImpl" />

    <bean id="trashService" class="org.motechproject.mds.service.impl.history.TrashServiceImpl" />

    <bean id="schemaGenerator" class="org.motechproject.mds.jdo.SchemaGenerator">
        <constructor-arg ref="persistenceManagerFactoryBean" />
    </bean>

    <bean id="jdoListenerRegister" class="org.motechproject.mds.listener.register.JdoListenerRegister" />

    <bean id="csvImporterExporter" class="org.motechproject.mds.service.impl.csv.CsvImporterExporter" />

    <bean id="pdfCsvExporter" class="org.motechproject.mds.service.impl.csv.PdfCsvExporter" />

    <bean id="csvImportExportService" class="org.motechproject.mds.service.impl.csv.CsvImportExportServiceImpl" />

    #foreach ( $entry in $list )
        #if ( $StringUtils.isNotBlank( $entry.repository ) )
            <bean id="$entry.repository" class="$entry.repository" />
        #end

        #if ( $StringUtils.isNotBlank( $entry.serviceClass ) )
            <bean id="$entry.serviceName" class="$entry.serviceClass">
                #if ( $StringUtils.isNotBlank( $entry.repository ) )
                <property name="repository" ref="$entry.repository"/>
                #end
            </bean>

            <bean id="$entry.restId" class="org.motechproject.mds.rest.MdsRestFacadeImpl">
                <property name="dataService" ref="$entry.serviceName"/>
                <property name="allEntities" ref="allEntities"/>
            </bean>
        #end
    #end

  <!-- We override the allowCreate from mds, we must create persistence managers for OSGi callers -->
  <bean id="persistenceManagerFactory" class="org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy">
      <property name="targetPersistenceManagerFactory" ref="persistenceManagerFactoryBean"/>
      <property name="allowCreate" value="true"/>
  </bean>

  <!-- Override the properties, adding listener entries -->
  <bean id="mdsSqlProperties" factory-bean="sqlDbManager" factory-method="getSqlProperties">
      <constructor-arg>
        <bean factory-bean="jdoListenerRegister" factory-method="addJdoListeners">
            <constructor-arg>
                <bean factory-bean="mdsConfig" factory-method="getDataNucleusProperties" />
            </constructor-arg>
        </bean>
      </constructor-arg>
  </bean>

</beans>
